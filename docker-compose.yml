services:
  db:
    image: postgres:13
    container_name: harmony-db
    environment:
      POSTGRES_USER: harmony_user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: harmony_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - harmony_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d harmony_db -U harmony_user"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: harmony-backend
    environment:
      DATABASE_URL: postgresql://harmony_user:password@db:5432/harmony_db
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ./frontend/assets:/app/frontend/assets
      - ./backend/uploads:/app/uploads
    networks:
      - harmony_network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: harmony-frontend
    ports:
      - "8501:8501"
    depends_on:
      - backend
    networks:
      - harmony_network


  gemini_service:
    build: ./gemini_service
    container_name: harmony-gemini
    environment:
      - GOOGLE_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8002:8002"
    volumes:
      - ./gemini_service:/app
    networks:
      - harmony_network
    restart: always



volumes:
  postgres_data:

networks:
  harmony_network:
